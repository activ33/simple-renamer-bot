from pyrogram import Client, filters, enums
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup 
from config import ADMIN
 

@Client.on_message(filters.command("start") & filters.private)                             
async def start_cmd(bot, msg):
    txt="–≠—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –±–æ—Ç üôè. –•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø? üëá –ö–ª–∏–∫–Ω–∏—Ç–µ '–ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø'!"
    btn = InlineKeyboardMarkup([[
        InlineKeyboardButton("ü§ñ –ë—É–¥—É —Ä–∞–¥ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É", url="https://t.me/ipa_fire_ios_uz")
        ],[
        InlineKeyboardButton("üñ•Ô∏è –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø", url="https://t.me/fr1day_pon")
    ]])
    if msg.from_user.id != ADMIN:
        return await msg.reply_text(text=txt, reply_markup=btn, disable_web_page_preview = True)
    await start(bot, msg, cb=False)


@Client.on_callback_query(filters.regex("start"))
async def start(bot, msg, cb=True):   
    txt=f"–ü—Ä–∏–≤–µ—Ç {msg.from_user.mention}. –≠—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –±–æ—Ç —Å –ø—Ä–æ—Å—Ç—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º, —è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞—é —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤.\n–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—é <b><a href=https://t.me/fr1day_pon>fr1day</a></b>"                                     
    button= [[
        InlineKeyboardButton("ü§ñ –ë—É–¥—É —Ä–∞–¥ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É", url="https://t.me/ipa_fire_ios_uz")
        ],[
        InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help"),
        InlineKeyboardButton("üì° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="about") 
    ]]  
    if cb:
        await msg.message.edit(text=txt, reply_markup=InlineKeyboardMarkup(button), disable_web_page_preview = True, parse_mode=enums.ParseMode.HTML)
    else:
        await msg.reply_text(text=txt, reply_markup=InlineKeyboardMarkup(button), disable_web_page_preview = True, parse_mode=enums.ParseMode.HTML)


@Client.on_callback_query(filters.regex("help"))
async def help(bot, msg):
    txt = "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∏ /rename <new name> —Å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –≤–∞—à —Ñ–∞–π–ª.\n\n"
    txt += "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–∏–Ω–∏–∞—Ç—é—Ä—É –¥–ª—è —Ñ–∞–π–ª–∞. \n"
    txt += "/view –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–∏–Ω–∏–∞—Ç—é—Ä—ã. \n"
    txt += "/del –¥–ª—è –∞–≤—Ç–æ-—É–¥–∞–ª–µ–Ω–∏—è –º–∏–Ω–∏–∞—Ç—é—Ä—ã."
    button= [[        
        InlineKeyboardButton("üö´ Close", callback_data="del"),
        InlineKeyboardButton("‚¨ÖÔ∏è Back", callback_data="start") 
    ]]  
    await msg.message.edit(text=txt, reply_markup=InlineKeyboardMarkup(button), disable_web_page_preview = True)


@Client.on_callback_query(filters.regex("about"))
async def about(bot, msg):
    me=await bot.get_me()
    txt=f"<b>Bot Name: {me.mention}\nDeveloper: <a href=https://t.me/fr1day_pon>fr1day</a></b>"                 
    button= [[        
        InlineKeyboardButton("üö´ Close", callback_data="del"),
        InlineKeyboardButton("‚¨ÖÔ∏è Back", callback_data="start") 
    ]]  
    await msg.message.edit(text=txt, reply_markup=InlineKeyboardMarkup(button), disable_web_page_preview = True, parse_mode=enums.ParseMode.HTML)


@Client.on_callback_query(filters.regex("del"))
async def closed(bot, msg):
    try:
        await msg.message.delete()
    except:
        return


